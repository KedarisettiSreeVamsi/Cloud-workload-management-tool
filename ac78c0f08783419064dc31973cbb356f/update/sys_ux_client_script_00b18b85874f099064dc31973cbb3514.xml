<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ux_client_script">
    <sys_ux_client_script action="INSERT_OR_UPDATE">
        <includes/>
        <macroponent display_value="anyobject_asmt">7fa14b85874f099064dc31973cbb35f7</macroponent>
        <name>handle typeahead events</name>
        <required_translations/>
        <script><![CDATA[/**
 * @param {params} params
 * @param {api} params.api
 * @param {any} params.event
 * @param {any} params.imports
 */
function handler({
    api,
    event,
    helpers,
    imports
}) {
    var {
        name,
        payload
    } = event;
    var assignee = null;
    var options = `{"domain": "", "ramId": "${api.state.ramId}"}`;
    if (name === 'NOW_TYPEAHEAD#SELECTED_ITEM_SET') {
        if (event.elementId == 'assessor') {
            if (payload.value) {
                api.setState('assessor', payload.value);
            } else {
                api.setState('assessor', '');
            }

        }
        if (event.elementId == 'approver') {
            if (payload.value) {
                api.setState('approver', payload.value);
            } else {
                api.setState('approver', '');
            }
        }
    }


    //Searching users based on initials
    if (name === "NOW_TYPEAHEAD#VALUE_SET") {
        var searchString = payload.value;
        if (searchString) {
            helpers.snHttp('/api/sn_risk_advanced/riskasmntapi/getAssessmentUsers?searchString=' + [searchString]+'&type=' + [event.elementId]+'&options=' + [options], {
                method: "GET",
                batch: false

            }).then(({
                response
            }) => {
                var {
                    result
                } = response;
                if (event.elementId == 'assessor') {
                    api.setState('assessors', result.users.assigneeChoices);
                }
                if (event.elementId == 'approver')
                    api.setState('approvers', result.users.assigneeChoices);

            });
        } else {
            if (event.elementId == 'assessor') {
                api.setState("assessors", api.state.defaultUserList);
            }
            if (event.elementId == 'approver')
                api.setState("approvers", api.state.defaultUserList);
        }
    }
}]]></script>
        <script_api_version>2.0.0</script_api_version>
        <sys_class_name>sys_ux_client_script</sys_class_name>
        <sys_created_by>sjansse2</sys_created_by>
        <sys_created_on>2022-04-22 15:31:35</sys_created_on>
        <sys_customer_update>false</sys_customer_update>
        <sys_id>00b18b85874f099064dc31973cbb3514</sys_id>
        <sys_mod_count>0</sys_mod_count>
        <sys_name>handle typeahead events</sys_name>
        <sys_package display_value="Cloud Workload Management Tool" source="x_asmln_cloud_wo_1">ac78c0f08783419064dc31973cbb356f</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Cloud Workload Management Tool">ac78c0f08783419064dc31973cbb356f</sys_scope>
        <sys_update_name>sys_ux_client_script_00b18b85874f099064dc31973cbb3514</sys_update_name>
        <sys_updated_by>sjansse2</sys_updated_by>
        <sys_updated_on>2022-04-22 15:31:35</sys_updated_on>
        <type>default</type>
    </sys_ux_client_script>
</record_update>
